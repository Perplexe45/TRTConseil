{% extends 'base.html.twig' %}

{% block title %}Inscription
{% endblock %}
{% block stylesheets %}{% endblock %}

{% block body %}
	<section data-bs-version="5.1" class="form7 cid-u5uXzWpi1R" id="form7-r">
		<div class=" container">
			<div class="mbr-section-head">
				<h3 class="mbr-fonts-style align-center display-2">
					<strong>Inscription</strong>
				</h3>

			</div>
			<div class="row justify-content-center mt-3">
				<div class="col-lg-6 mx-auto mbr-form formSignup">
					<div class="dragArea row">
						<div class="col-lg-12 col-md-12 col-sm-12 form-group" data-for="name">
							<form action="" method="POST" class="mx-auto" data-form-title="Form Name">
								<fieldset class="align-center">
									<div class="pt-2">
										<legend>Vous êtes</legend>
									</div>


									<input type="radio" name="categorie" value="Candidat" id="categorie_candidat"/>
									<label for="Candidat">Candidat</label>

									<input class="ms-3" type="radio" name="categorie" value="Recruteur" id="categorie_recruteur"/>
									<label for="Recruteur">Recruteur</label>

									<hr>
								</fieldset>

								<div
									class="text-center fs-5 bg-danger">
									{# Message si oubli de faire une sélection (recruteur ou candidat) ou message de success de la soumission du formulaire#}
									{% for label, messages in app.flashes %}
										<div class="flash-{{ label }}">
											{% for message in messages %}
												<div class="flash-messageSelect flash-messageSuccess">{{ message }}</div>

											{% endfor %}
										</div>
									{% endfor %}
								</div>

								<script>
									document.addEventListener('DOMContentLoaded', function () {
// Sélectionner les éléments avec la classe .flash-messageSelect et la classe .flash-messageSuccess

// //////////////////////////////////////////////////////////////////////////////////////////
// Fonction asynchrone pour que le message d'erreur soit visible pendant 4 secondes du sélect
let flashMessagesSelect = document.querySelectorAll('.flash-messageSelect');
async function cacherMessagesFlash() { // Parcourir tous les éléments .flash-messageSelect
for (let flashMessage of flashMessagesSelect) { // Cacher le message flash après 4 secondes
await new Promise(resolve => setTimeout(resolve, 4000));
flashMessage.style.display = 'none';
}
}
// Appeler la fonction pour cacher les messages flash
cacherMessagesFlash();
// ///////////////////////////////Fin du traitement////////////////////////////////////////

// ////////////////////Cacher des champs selon la sélection////////////////////////////////////

// Sélectionner les éléments radio et les conteneurs du métier, du candidat et du recruteur
const categorieCandidat = document.querySelectorAll('categorie_candidat');
const categorieRecruteur = document.querySelectorAll('categorie_recruteur');
const metierContainer = document.querySelectorAll('metier_container');
const candidatContainer = document.querySelectorAll('candidat_container');
const recruteurContainer = document.querySelectorAll('recruteur_container');

// Masquer les conteneurs du candidat et du recruteur par défaut
candidatContainer.style.display = 'none';
recruteurContainer.style.display = 'none';

// Masquer le conteneur du métier par défaut
metierContainer.style.display = 'none';

// Ajouter des écouteurs d'événements aux éléments radio
categorieCandidat.addEventListener('change', function () {
if (this.checked) { // Afficher le conteneur du candidat, masquer le conteneur du recruteur et afficher le conteneur du métier
candidatContainer.style.display = 'block';
recruteurContainer.style.display = 'none';
metierContainer.style.display = 'block';
}
});

categorieRecruteur.addEventListener('change', function () {
if (this.checked) { // Masquer le conteneur du candidat, afficher le conteneur du recruteur et masquer le conteneur du métier
candidatContainer.style.display = 'none';
recruteurContainer.style.display = 'block';
metierContainer.style.display = 'none';
}
});


// ///////////////////////////////////////////////////////////////////////////////
// Fonction asynchrone pour gérer les messages flash et la redirection
let flashMessagesSuccess = document.querySelectorAll('.flash-messageSuccess');
let flashMessageOk = false;
async function gererMessagesFlashEtRedirection() {
for (let flashMessage of flashMessagesSuccess) { // Cacher le message flash après 4 secondes
await new Promise(resolve => setTimeout(resolve, 4000));
flashMessage.style.display = 'none';
flashMessageOk = true;
}
}
});

// Appeler la fonction pour gérer les messages flash et la redirection
gererMessagesFlashEtRedirection();

console.log('flashMessageOk');
// Redirection sur la page d'accuel
if (flashMessageOk === true) {
window.location.href = "{{ path('app_home') }}";
}
// //////////////////F////////////////////////////////////
								</script>


								{{ form_errors(registrationForm) }}
								{{ form_start(registrationForm) }}

								<div class="row">
									<div id="candidat_container" class="col mb-3 rounded p-2">
										{{ form_label(registrationForm.candidat.nom) }}
										{{ form_widget(registrationForm.candidat.nom) }}
									</div>

									<div id="metier_container" class="col mb-1 rounded p-2">
										{{ form_label(registrationForm.metier, ) }}
										{{ form_widget(registrationForm.metier) }}
									</div>

									<div id="recruteur_container" class="col mb-3 p-2">
										{{ form_label(registrationForm.recruteur.nomEntreprise) }}
										{{ form_widget(registrationForm.recruteur.nomEntreprise) }}
									</div>


								</div>

								<div class="row">
									<div class="form-group col mb-3 mt-1 ">
										{{ form_row(registrationForm.email) }}
									</div>

									<div class="form-group col mb-3">
										{{ form_row(registrationForm.plainPassword, {label: 'mot de passe'}) }}
									</div>

									<div class="chek-form ">
										{{ form_row(registrationForm.agreeTerms) }}
									</div>

									<div class="mbr-section-btn align-center">
										<button type="submit" class="btn btn-primary display-4 btnWidth">Valider</button>
									</div>

									<div class="form-note text-center">Vous avez déjà un compte?
										<a href="/login">Connexion</a>
									</div>

									{{ form_end(registrationForm) }}
								</div>

							</div>
						</form>

					</div>
				</div>
			</div>
		</div>
	</div>
</section>{% endblock %}
